# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Santa Clothes CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  PROJECT_NAME: santa-clothes-backend
  BUCKET_NAME: santa-clothes-ci-cd
  CODE_DEPLOY_APP_NAME: santa-clothes-code-deploy
  DEPLOYMENT_GROUP_NAME: santa-clothes-instance

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: run docker-compose
      run: |
        mkdir ./src/main/resources
        cd ./src/main/resources
        touch ./docker-compose.yml
        echo "${{ secrets.DOCKER_COMPOSE }}" >> ./docker-compose.yml
        cat ./docker-compose.yml
      
    - name: make application.yml
      run: |
        cd ./src/main/resources
        touch ./application.yml
        echo "${{ secrets.APPLICATION }}" >> ./application.yml
        cat ./application.yml
        
    - name: make application-chatgpt.yml
      run: |
        cd ./src/main/resources
        touch ./application-chatgpt.yml
        echo "${{ secrets.APPLICATION_CHATGPT }}" >> ./application-chatgpt.yml
        cat ./application-chatgpt.yml
        
    - name: make application-iamport.yml
      run: |
        cd ./src/main/resources
        touch ./application-iamport.yml
        echo "${{ secrets.APPLICATION_IAMPORT }}" >> ./application-iamport.yml
        cat ./application-iamport.yml
        
    - name: make application-jwt.yml
      run: |
        cd ./src/main/resources
        touch ./application-jwt.yml
        echo "${{ secrets.APPLICATION_JWT }}" >> ./application-jwt.yml
        cat ./application-jwt.yml
    
    - name: make application-oauth.yml
      run: |
        cd ./src/main/resources
        touch ./application-oauth.yml
        echo "${{ secrets.APPLICATION_OAUTH }}" >> ./application-oauth.yml
        cat ./application-oauth.yml
    
    - name: make application-slack.yml
      run: |
        cd ./src/main/resources
        touch ./application-slack.yml
        echo "${{ secrets.APPLICATION_SLACK }}" >> ./application-slack.yml
        cat ./application-slack.yml
        
    - name: make application.yml
      run: |
        mkdir ./src/test/resources
        cd ./src/test/resources
        touch ./application.yml
        echo "${{ secrets.TEST_APPLICATION }}" >> ./application.yml
        cat ./application.yml
        
    - name: make application-chatgpt.yml
      run: |
        cd ./src/test/resources
        touch ./application-chatgpt.yml
        echo "${{ secrets.APPLICATION_CHATGPT }}" >> ./application-chatgpt.yml
        cat ./application-chatgpt.yml
        
    - name: make application-iamport.yml
      run: |
        cd ./src/test/resources
        touch ./application-iamport.yml
        echo "${{ secrets.APPLICATION_IAMPORT }}" >> ./application-iamport.yml
        cat ./application-iamport.yml
        
    - name: make application-jwt.yml
      run: |
        cd ./src/test/resources
        touch ./application-jwt.yml
        echo "${{ secrets.APPLICATION_JWT }}" >> ./application-jwt.yml
        cat ./application-jwt.yml
    
    - name: make application-oauth.yml
      run: |
        cd ./src/test/resources
        touch ./application-oauth.yml
        echo "${{ secrets.APPLICATION_OAUTH }}" >> ./application-oauth.yml
        cat ./application-oauth.yml
    
    - name: make application-slack.yml
      run: |
        cd ./src/test/resources
        touch ./application-slack.yml
        echo "${{ secrets.APPLICATION_SLACK }}" >> ./application-slack.yml
        cat ./application-slack.yml
    
    - name: make room.html
      run: |
        mkdir ./src/main/resources/templates
        mkdir ./src/main/resources/templates/chat
        cd ./src/main/resources/templates/chat
        touch ./room.html
        echo "${{ secrets.ROOM }}" >> ./room.html
        cat ./room.html
        
    - name: make roomDetail.html
      run: |
        cd ./src/main/resources/templates/chat
        touch ./roomDetail.html
        echo "${{ secrets.ROOM_DETAIL }}" >> ./roomDetail.html
        cat ./roomDetail.html
        
    - name: make index.html
      run: |
        cd ./src/main/resources/templates
        touch ./index.html
        echo "${{ secrets.INDEX }}" >> ./index.html
        cat ./index.html
        
    - name: Grand execute permisson for gradlew
      run: chmod +x gradlew
      
    - name: Build with Gradle
#       run: ./gradlew build
      run: ./gradlew build -x test
      
      
      ############## CD
      
      
    - name: Make Zip File
      run: zip -qq -r ./$GITHUB_SHA.zip .
      shell: bash
    
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_PRIVATE_ACCESS_KEY }}
        aws-region: ap-northeast-2
    
    - name: Upload to S3
      run: aws s3 cp --region ap-northeast-2 ./$GITHUB_SHA.zip s3://$BUCKET_NAME/$PROJECT_NAME/$GITHUB_SHA.zip
    
    - name: Code Deploy
      run: aws deploy create-deployment --application-name $CODE_DEPLOY_APP_NAME --deployment-config-name CodeDeployDefault.OneAtATime --deployment-group-name $DEPLOYMENT_GROUP_NAME --s3-location bucket=$BUCKET_NAME,bundleType=zip,key=$PROJECT_NAME/$GITHUB_SHA.zip
